(()=>{"use strict";var __webpack_modules__={581:()=>{eval('\n// UNUSED EXPORTS: formAddImagValidator, formEditProfileValidator, popupWithZoomImage\n\n;// CONCATENATED MODULE: ./src/utils/constants.js\nvar initialCards = [{\n  name: \'Архыз\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\'\n}, {\n  name: \'Челябинская область\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\'\n}, {\n  name: \'Иваново\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\'\n}, {\n  name: \'Камчатка\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\'\n}, {\n  name: \'Холмогорский район\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\'\n}, {\n  name: \'Байкал\',\n  link: \'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\'\n}];\nvar validationOptions = {\n  formSelector: \'.popup__form\',\n  submitSelector: \'.popup__save\',\n  inputSelector: \'.popup__input\',\n  inputSectionSelector: \'.popup__field\',\n  inputErrorSelector: \'.popup__input-error\',\n  inputErrorClass: \'popup__input-error_active\',\n  inputErrorLineClass: \'popup__input_invalid\',\n  disabledButtonClass: \'popup__save_inactive\'\n};\n\n;// CONCATENATED MODULE: ./src/components/Сard.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n//свяжите класс Card c попапом, сделайте так, чтобы Card принимал в конструктор функцию handleCardClick \nvar Card = /*#__PURE__*/function () {\n  function Card(_ref, templateSelector) {\n    var data = _ref.data,\n      handleCardClick = _ref.handleCardClick;\n    _classCallCheck(this, Card);\n    // аргументы: { data, handleCardClick }, cardSelector\n    this._name = data.name;\n    this._link = data.link;\n    this._alt = data.name;\n    this._templateSelector = templateSelector;\n    this.generateCard = this.generateCard.bind(this);\n    this.handleCardClick = handleCardClick;\n  }\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      // добавление новой карточки на страницу\n      var cardNewElement = document.querySelector(this._templateSelector /*\'.card-template\'*/) //найдёт template-элемент\n      .content // извлечёт его содержимое\n      .querySelector(\'.element\') // в содержимом найдёт элемент с классом\n      .cloneNode(true); // клонирует его\n\n      return cardNewElement; //вернёт клонированный элемент\n    }\n  }, {\n    key: "generateCard",\n    value: function generateCard() {\n      // метод, который вставит данные в разметку и подготовит карточку\n      this._element = this._getTemplate();\n      this._setEventListeners(); // добавили обработчики\n      this._element.querySelector(\'.element__title\').textContent = this._name; // добавляем данные\n      this._element.querySelector(\'.element__image\').src = this._link;\n      this._element.querySelector(\'.element__image\').alt = this._alt;\n      return this._element;\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      this._element.querySelector(\'.element__button_delete\') // delete\n      .addEventListener(\'click\', function () {\n        _this._deleteCardElement();\n      });\n      this._element.querySelector(\'.element__button_like\') // like\n      .addEventListener(\'click\', function () {\n        _this._handleLikeCardElement();\n      });\n      this._element.querySelector(\'.element__image\') // open big image\n      .addEventListener(\'click\', function () {\n        _this.handleCardClick(_this._name, _this._link); // конкретные данные\n      });\n    }\n  }, {\n    key: "_handleLikeCardElement",\n    value: function _handleLikeCardElement() {\n      this._element.querySelector(\'.element__button_like\').classList.toggle(\'element__button_like_active\');\n    }\n  }, {\n    key: "_deleteCardElement",\n    value: function _deleteCardElement() {\n      this._element.remove();\n      this._element = null; // очистка ссылки на DOM-элемент\n    }\n  }]);\n  return Card;\n}();\n\n;\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperty(obj, key, value) { key = FormValidator_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n//принимает вторым параметром элемент той формы, которая валидируется\nvar FormValidator = /*#__PURE__*/FormValidator_createClass(function FormValidator(validationOptions, form) {\n  var _this = this;\n  FormValidator_classCallCheck(this, FormValidator);\n  //показать ошибку\n  _defineProperty(this, "_showInputError", function (inputElement, message) {\n    var inputFieldElement = inputElement.closest(_this._validationOptions.inputSectionSelector);\n    var errorElement = inputFieldElement.querySelector(_this._validationOptions.inputErrorSelector);\n    errorElement.innerText = message;\n    errorElement.classList.add(_this._validationOptions.inputErrorClass);\n    inputElement.classList.add(_this._validationOptions.inputErrorLineClass);\n  });\n  //убрать ошибку\n  _defineProperty(this, "_hideInputError", function (inputElement) {\n    var inputFieldElement = inputElement.closest(_this._validationOptions.inputSectionSelector);\n    var errorElement = inputFieldElement.querySelector(_this._validationOptions.inputErrorSelector);\n    errorElement.innerText = \' \';\n    errorElement.classList.remove(_this._validationOptions.inputErrorClass);\n    inputElement.classList.remove(_this._validationOptions.inputErrorLineClass);\n  });\n  //показ ошибки после проверки на валидность input\n  _defineProperty(this, "_checkInputStateValid", function (inputElement) {\n    if (inputElement.validity.valid) {\n      _this._hideInputError(inputElement);\n    } else {\n      _this._showInputError(inputElement, inputElement.validationMessage);\n    }\n    ;\n  });\n  _defineProperty(this, "resetErrorForOpenPopup", function () {\n    _this.inputs.forEach(function (inputElement) {\n      _this._hideInputError(inputElement);\n    });\n    _this._disableButtonSave(); //кнопка очищается при открытии попапа\n  });\n  //кнопка Сохранить включается для нажатия\n  _defineProperty(this, "_enableButtonSave", function () {\n    _this.buttonElement.removeAttribute(\'disabled\');\n    _this.buttonElement.classList.remove(_this._validationOptions.disabledButtonClass);\n  });\n  //кнопка Сохранить отключается для нажатия\n  _defineProperty(this, "_disableButtonSave", function () {\n    _this.buttonElement.setAttribute(\'disabled\', true);\n    _this.buttonElement.classList.add(_this._validationOptions.disabledButtonClass);\n  });\n  //валидность формы для кнопки\n  _defineProperty(this, "_toggleButtonStateValid", function () {\n    var formIsValid = _this.inputs.every(function (inputElement) {\n      return inputElement.validity.valid;\n    });\n    if (formIsValid) {\n      _this._enableButtonSave(); //передавать в параметрах поля класса не нужно, они доступны во всех методах класса\n    } else {\n      _this._disableButtonSave();\n    }\n    ;\n  });\n  //пройтись по массиву и на каждое поле ввода навесить слушатель для проверки на валидность полей и кнопки\n  _defineProperty(this, "_setEventListeners", function () {\n    _this.inputs.forEach(function (inputElement) {\n      inputElement.addEventListener(\'input\', function () {\n        _this._checkInputStateValid(inputElement);\n        _this._toggleButtonStateValid();\n      });\n    });\n    _this._toggleButtonStateValid();\n\n    //this.form.addEventListener(\'submit\', () => { //перенесено в resetErrorForOpenPopup на открытие\n    // this._disableButtonSave(this.form.querySelector(this._validationOptions.submitSelector));//кнопка очищается при закрытии\n    //});\n  });\n  //публичный метод enableValidation, который включает валидацию формы\n  //проверка каждой формы на валидность, слушатель на каждую форму\n  _defineProperty(this, "enableValidation", function () {\n    _this._setEventListeners();\n  });\n  this._validationOptions = validationOptions; //форма, инпуты, кнопка, ошибки\n  this.form = form; //форма\n  this.inputs = Array.from(this.form.querySelectorAll(validationOptions.inputSelector)); //инпуты в форме\n  this.buttonElement = this.form.querySelector(validationOptions.submitSelector); //кнопка\n});\n\n;\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    // принимает в конструктор единственный параметр — popupSelector\n    this.popupSelector = popupSelector; //popupSelector - селектор конкретного попапа\n    this._handleEscClose = this._handleEscClose.bind(this); //без этого не работает закрытие на esc, контекст теряется\n  }\n  Popup_createClass(Popup, [{\n    key: "openPopup",\n    value:\n    // cодержит публичные методы open и close, которые отвечают за открытие и закрытие попапа\n    function openPopup() {\n      this.popupSelector.classList.add(\'popup_opened\'); // к конкретному попапу добавляется открытие\n      document.addEventListener(\'keydown\', this._handleEscClose); // вместо старой функции новый метод\n    }\n  }, {\n    key: "closePopup",\n    value: function closePopup() {\n      this.popupSelector.classList.remove(\'popup_opened\'); // к конкретному попапу удаляется открытие\n      document.removeEventListener(\'keydown\', this._handleEscClose); // вместо старой функции новый метод\n    }\n  }, {\n    key: "_handleEscClose",\n    value:\n    // приватный метод _handleEscClose, который содержит логику закрытия попапа клавишей Esc\n    function _handleEscClose(evt) {\n      if (evt.key === \'Escape\') {\n        //const popup = document.querySelector(\'.popup_opened\'); \n        this.closePopup();\n      }\n      ;\n    }\n  }, {\n    key: "setEventListeners",\n    value:\n    // публичный метод setEventListeners, который добавляет слушатель клика иконке закрытия попапа\n    // модальное окно также закрывается при клике на затемнённую область вокруг формы\n    function setEventListeners() {\n      var _this = this;\n      // закрытие на overlay + по кнопке крестику\n      this.popupSelector.addEventListener(\'mousedown\', function (evt) {\n        if (evt.target.classList.contains(\'popup\') || evt.target.classList.contains(\'popup__close\')) {\n          _this.closePopup();\n        }\n      });\n    }\n  }]);\n  return Popup;\n}();\n\n;\n\n// класс Popup, который отвечает за открытие и закрытие попапа\n// должно быть 4 метода, описанных в ТЗ, исходя из принципа, что более \n// общий класс должен описывать поведение всех попапов \n// a конкретизация каких-то методов должна происходить уже на уровне дочерних классов\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithForm, _Popup);\n  var _super = _createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, handleFormSubmit) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._handleFormSubmit = handleFormSubmit; // кроме селектора попапа принимает в конструктор колбэк сабмита формы\n    _this._formOfPopup = _this.popupSelector.querySelector(\'.popup__form\');\n    return _this;\n  }\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value:\n    // приватный метод _getInputValues, который собирает данные всех полей формы\n    function _getInputValues() {\n      var inputList = this._formOfPopup.querySelectorAll(\'.popup__input\'); // достаём все элементы полей\n\n      return Array.from(inputList).reduce(function (formData, input) {\n        formData[input.name] = input.value; // добавляем в этот объект значения всех полей\n        return formData; // возвращаем объект значений\n      }, {}); // создаём пустой объект\n    }\n  }, {\n    key: "setInputValues",\n    value: function setInputValues(userData) {\n      //передача в метод установки значений инпутов у класса PopupWithForm\n      var inputList = this._formOfPopup.querySelectorAll(\'.popup__input\');\n      inputList.forEach(function (input) {\n        input.value = userData[input.name];\n      });\n    }\n  }, {\n    key: "closePopup",\n    value:\n    // перезаписывает родительский метод close, так как при закрытии попапа форма должна ещё и сбрасываться \n    function closePopup() {\n      _get(_getPrototypeOf(PopupWithForm.prototype), "closePopup", this).call(this); // вызываем родительский метод, в нём закрытие попапа и отмена слушателя на esc\n      this._formOfPopup.reset(); //чистим форму от несохранённого текста\n    }\n\n    // перезаписывает родительский метод setEventListeners\n    // метод setEventListeners класса PopupWithForm должен не только добавлять обработчик клика иконке закрытия, \n    // но и добавлять обработчик сабмита формы\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      _get(_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._formOfPopup.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        _this2._handleFormSubmit(_this2._getInputValues());\n      });\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;\n\n// класс PopupWithForm, который наследуется от Popup, вызывает его конструктор, в который передает нужный параметр\n//при этом принимает еще и второй параметр - колбэк сабмита формы\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithImage_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithImage_get = Reflect.get.bind(); } else { PopupWithImage_get = function _get(target, property, receiver) { var base = PopupWithImage_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithImage_get.apply(this, arguments); }\nfunction PopupWithImage_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithImage_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithImage_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithImage_setPrototypeOf(subClass, superClass); }\nfunction PopupWithImage_setPrototypeOf(o, p) { PopupWithImage_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithImage_setPrototypeOf(o, p); }\nfunction PopupWithImage_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithImage_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithImage_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithImage_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithImage_possibleConstructorReturn(this, result); }; }\nfunction PopupWithImage_possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithImage_assertThisInitialized(self); }\nfunction PopupWithImage_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithImage_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithImage_getPrototypeOf(o) { PopupWithImage_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithImage_getPrototypeOf(o); }\n\n// класс PopupWithImage, наследуется от Popup, вызывает его конструктор, в который передает нужный параметр\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  PopupWithImage_inherits(PopupWithImage, _Popup);\n  var _super = PopupWithImage_createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector); // наследуем от Popup popupSelector - селектор конкретного попапа\n    _this._textForZoomImage = _this.popupSelector.querySelector(\'.popup__paragraph\');\n    _this._linkforZoomImage = _this.popupSelector.querySelector(\'.popup__image\');\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "openPopup",\n    value:\n    // этот класс должен перезаписывать родительский метод open\n    // в методе open класса PopupWithImage нужно вставлять в попап картинку с src изображения и подписью к картинке\n    // используя логику полиморфизма надо перезаписать метод open, сначала сделать в нем то что описано в ТЗ, \n    // а потом вызвать метод родительского класса чтобы открыть попап\n    function openPopup(name, link) {\n      // данные, чтобы их взять\n      PopupWithImage_get(PopupWithImage_getPrototypeOf(PopupWithImage.prototype), "openPopup", this).call(this); // вызываем родительский метод, в нём открытие попапа и слушатель на esc\n      this._textForZoomImage.textContent = name; // добавляем данные\n      this._linkforZoomImage.src = link;\n      this._linkforZoomImage.alt = name;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n// класс Section, который отвечает за отрисовку элементов на странице\nvar Section = /*#__PURE__*/function () {\n  // первым параметром конструктора принимает объект с двумя свойствами: items и renderer\n  // свойство items — это массив данных, которые нужно добавить на страницу при инициализации класса, массив карточек items\n  // cвойство renderer — это функция, которая отвечает за создание и отрисовку данных на странице,\n  // описывает логику создания новой карточки\n  // второй параметр конструктора — селектор контейнера, в который нужно добавлять созданные элементы\n\n  function Section(_ref, containerSelector) {\n    var items = _ref.items,\n      renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._items = items;\n    this._renderer = renderer;\n    this._containerSelector = document.querySelector(\'.elements\');\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value:\n    // cодержит публичный метод, который отвечает за отрисовку всех элементов\n    // отрисовка каждого отдельного элемента должна осуществляться функцией renderer\n    function renderItems() {\n      var _this = this;\n      // карточки при загрузке страницы\n      this._items.forEach(function (item) {\n        _this._renderer(item);\n      });\n    }\n  }, {\n    key: "addItem",\n    value:\n    // содержит публичный метод addItem, который принимает DOM-элемент и добавляет его в контейнер\n    function addItem(item) {\n      //добавление новой карточки\n      this._containerSelector.prepend(item);\n    }\n  }]);\n  return Section;\n}();\n\n;\n\n// у класса Section нет своей разметки. Он получает разметку через функцию-колбэк и вставляет её в контейнер\n\n// внутри продумайте логику для отрисовки всех карточек, полученных через аргумент \n// конструктора items, а также логику для отрисовки одной карточки (через аргумент который \n// получает сам метод отрисовки одной карточки). То есть по крайней мере у вас должно быть \n// два метода помимо конструктора\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n// класс UserInfo отвечает за управление отображением информации о пользователе на странице\nvar UserInfo = /*#__PURE__*/function () {\n  // принимает в конструктор объект с селекторами двух элементов: элемента имени пользователя и элемента информации о себе\n  // аргумент - объект с двумя ключами { элементИнформацииОСебе, элементИмени } \n  function UserInfo(_ref) {\n    var nameProfile = _ref.nameProfile,\n      jobProfile = _ref.jobProfile;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._name = document.querySelector(\'.profile__name\');\n    this._profession = document.querySelector(\'.profile__text\');\n    // this._nameInput= document.querySelector(\'.popup__input_type_name\');\n    //this._professionInput = document.querySelector(\'.popup__input_type_profession\');\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value:\n    // cодержит публичный метод getUserInfo, который возвращает объект с данными пользователя\n    // этот метод пригодится когда данные пользователя нужно будет подставить в форму при открытии\n    // есть метод getUserInfo который возвращает текущие значения из разметки\n    // то есть textContent свойство двух элементов в виде объекта\n    function getUserInfo() {\n      //достать значения из элементов профиля и вернуть объект\n      //nameInputAditProfile.value = this._name.textContent;\n      //jobInputAditProfile.value = this._job.textContent;\n      return {\n        name: this._name.textContent,\n        profession: this._profession.textContent\n      };\n    }\n  }, {\n    key: "setUserInfo",\n    value:\n    // cодержит публичный метод setUserInfo, который принимает новые данные пользователя и добавляет их на страницу\n    //setUserInfo - получает объект с ключами и устанавливает их в разметку (то есть делает наоборот в отличие от getUserInfo)\n    function setUserInfo(userData) {\n      // должен принять объект данных и проставить из него значения в элементы профиля\n      this._name.textContent = userData.name, this._profession.textContent = userData.profession;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;\n;// CONCATENATED MODULE: ./src/pages/index.js\n\n\n\n\n\n\n\nvar popupEditProfile = document.querySelector(\'.popup_edit-profile\');\nvar popupAddImage = document.querySelector(\'.popup_add-image\');\nvar popupOpenBigImage = document.querySelector(\'.popup_open-image\');\nvar formEditProfile = document.querySelector(\'.popup__form_edit-profile\');\nvar formAddImage = document.querySelector(\'.popup__form_add-image\');\nvar buttonOpenEditProfile = document.querySelector(\'.profile__edit-button\');\nvar buttonCloseEditProfile = popupEditProfile.querySelector(\'.popup__close_edit-profile\');\nvar buttonSubmitSaveEditProfile = popupEditProfile.querySelector(\'.popup__save_edit-profile\');\nvar buttonOpenAddImage = document.querySelector(\'.profile__add-button\');\nvar buttonCloseAddImage = popupAddImage.querySelector(\'.popup__close_add-image\');\nvar buttonSubmitSaveAddImage = popupAddImage.querySelector(\'.popup__save_add-image\');\nvar buttonCloseBigImage = popupOpenBigImage.querySelector(\'.popup__close_open-image\');\nvar nameInputAditProfile = document.querySelector(\'.popup__input_type_name\');\nvar jobInputAditProfile = document.querySelector(\'.popup__input_type_profession\');\nvar nameProfile = document.querySelector(\'.profile__name\');\nvar jobProfile = document.querySelector(\'.profile__text\');\nvar placeTextInputAddImage = document.querySelector(\'.popup__input_type_place\');\nvar imageLinkInputAddImage = document.querySelector(\'.popup__input_type_link\');\nvar cardListWrapper = document.querySelector(\'.elements\');\nvar paragraphOpenBigImage = popupOpenBigImage.querySelector(\'.popup__paragraph\');\nvar imageOpenBigImage = popupOpenBigImage.querySelector(\'.popup__image\');\n // подключение css\n\n// section => экземпляр класса\nvar section = new Section({\n  items: initialCards,\n  renderer: renderCard\n}, \'.elements\');\n\n// popup => экземпляры класса\n// для каждого попапа создавайте свой экземпляр класса PopupWithForm\n// создаем два экземпляра класса PopupWithForm, в каждый передаем свой коллбек (помимо селектора попапа)\n// в одном случае форма редактирует данные пользователя на странице, во втором - добавляет новую карточку\n\nvar popupWithFormEditProfile = new PopupWithForm(popupEditProfile, submitCreateProfile);\npopupWithFormEditProfile.setEventListeners();\nvar popupWithFormAddImage = new PopupWithForm(popupAddImage, submitCreateImageCard);\npopupWithFormAddImage.setEventListeners();\n\n// zoom => экземпляр класса\nvar popupWithZoomImage = new PopupWithImage(popupOpenBigImage);\npopupWithZoomImage.setEventListeners();\n\n// info пользователя => экземпляр класса\nvar userInfo = new UserInfo({\n  nameProfile: nameProfile,\n  jobProfile: jobProfile\n});\n\n//валидация => экземпляры класса\nvar formEditProfileValidator = new FormValidator(validationOptions, formEditProfile);\nformEditProfileValidator.enableValidation();\nvar formAddImagValidator = new FormValidator(validationOptions, formAddImage);\nformAddImagValidator.enableValidation();\n\n//создание новой карточки => card => экземпляр класса\nvar createCard = function createCard(data) {\n  var card = new Card({\n    data: data,\n    handleCardClick: handleCardClick\n  }, \'.card-template\', \'.card-template_type_default\');\n  var cardElement = card.generateCard(); // создаём карточку и возвращаем её на страницу\n  return cardElement;\n};\n\n// renderer - функция которая описывает логику создания новой карточки,т.е функция, которая принимает данные,\n// необходимые для создания карточки, затем внутри себя создает ее и добавляет в список через публичный метод этого списка \n// функция не должна ничего возвращать, а просто создает карточку и добавляет в список (не нужен return)\nfunction renderCard( /*cardData*/data) {\n  var cardElement = createCard( /*cardData*/data);\n  section.addItem(cardElement);\n}\n;\n\n// popup\nfunction submitCreateProfile(userData) {\n  userInfo.setUserInfo(userData);\n  popupWithFormEditProfile.closePopup();\n}\n;\n\n// old version\n//function submitCreateProfile() {\n//userInfo.setUserInfo({ name: nameInputAditProfile.value, link: jobInputAditProfile.value });\n//popupWithFormEditProfile.closePopup();\n//};\n\nfunction submitCreateImageCard(data) {\n  section.addItem(createCard(data));\n  popupWithFormAddImage.closePopup();\n}\n;\n\n// old version\n//function submitCreateImageCard() {\n//section.addItem(createCard({ name: placeTextInputAddImage.value, link: imageLinkInputAddImage.value }));\n//popupWithFormAddImage.closePopup();\n//};\n\n// handleCardClick - функция, которая описывает поведение при нажатии на карточку  \n// функция должна открывать попап с картинкой при клике на карточку\n// так как логика открытия попапа описывается теперь в аргументе handleCardClick, то все костыли которые \n// раньше были связаны с этим (импортирование внешних функций в класс Card) можно убрать\nfunction handleCardClick(name, link) {\n  popupWithZoomImage.openPopup(name, link); // внутри вызов публичного метода экземпляра класса PopupWithImage\n}\n;\n\n//слушатели для открытия попапов на кнопки изменений\nbuttonOpenEditProfile.addEventListener(\'click\', function () {\n  popupWithFormEditProfile.openPopup(); // функцию на экземпляр класса, не на попап\n  var userData = userInfo.getUserInfo(); // данные профиля в попап - получение\n  popupWithFormEditProfile.setInputValues(userData); // и дальше нужно будет передать эти данные в форму\n  formEditProfileValidator.resetErrorForOpenPopup(); //чистим форму от ошибок + кнопка\n});\n\nbuttonOpenAddImage.addEventListener(\'click\', function () {\n  popupWithFormAddImage.openPopup();\n  formAddImagValidator.resetErrorForOpenPopup(); //чистим форму от ошибок + кнопка\n});\n\n// popup\n//buttonSubmitSaveEditProfile.addEventListener(\'click\', submitCreateProfile); //уже есть в PopupWithForm в handleFormSubmit\n//buttonSubmitSaveAddImage.addEventListener(\'click\', submitCreateImageCard);\n\nsection.renderItems(); // в конце!\n\n// в основном файле не должно быть больше логики, кроме создания экземпляров и вызова их публичных методов, \n// а также обработчиков на кнопках, которые открывают попапы через публичные методы//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///581\n')}},__webpack_exports__={};__webpack_modules__[581]()})();